{"version":3,"sources":["logo.svg","works/StoreContext.js","utils.js","works/TopicItem.js","works/Area.js","works/List.js","works/TopicPage.js","works/LabelItem.js","works/LabelPage.js","resource.js","useId.js","works/useStore.js","works/Workspace.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","StoreContext","React","createContext","utils","isRequired","Error","style","border","margin","padding","maxWidth","display","backgroundColor","TopicItem","_ref","_ref$topic","topic","_ref$onClick","onClick","store","useContext","react_default","a","createElement","name","e","stopPropagation","removeTopic","Area","props","children","List","list","_ref$getKey","getKey","renderContent","map","item","key","TopicPage","topics","otherTopics","filter","one","id","similarTopics","getSimilarTopics","myLabels","getLabels","similarTopicList","works_List","t","removeTopicLink","linkTopic","linkTwoTopics","otherTopicList","react","_useState","useState","_useState2","Object","slicedToArray","editName","setEditName","_useState3","description","_useState4","editDescription","setEditDescription","works_Area","value","onChange","target","updated","objectSpread","updateTopic","l","label","removeLabelFromTopic","labels","labelTopic","LabelItem","_ref$label","noServer","resource","saveGraph","graph","json","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","res","blob","Blob","type","saveAs","getGraph","files","length","file","reader","FileReader","onload","event","parse","result","readAsText","useId","setId","generate","next","restore","lastId","createTopicLink","topic1","topic2","sort","createTopicLabelLink","useStore","idGenerator","labelFuncs","_ref$name","similar","topicFuncs","_ref2","_ref2$name","_ref2$description","comments","topicDict","setTopicDict","labelDict","setLabelDict","_useState5","_useState6","currentTopicId","setCurrentTopicId","_useState7","_useState8","currentLabelId","setCurrentLabelId","_useState9","_useState10","topicLinks","setTopicLinks","_useState11","_useState12","labelLinks","setLabelLinks","_useState13","_useState14","topicLabelLinks","setTopicLabelLinks","hasLabel","currentTopic","currentLabel","values","load","isSameLink","l1","l2","notEqualTo","link","t1","t2","some","hasTopicLabelLink","concat","toConsumableArray","ids","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","Symbol","iterator","done","_ref8","_ref7","tid","lid","push","err","return","addTopic","attrs","defineProperty","addLabel","save","changeTopic","changeLabel","b","hasTopicLink","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_ref5","_ref4","id1","id2","newOne","newDict","fromEntries","entries","entry","_ref9","_ref10","_ref11","DoButton","text","Save","Workspace_DoButton","Workspace","views","topicName","setTopicName","labelName","setLabelName","topicDescription","setTopicDescription","view","setView","toLabelPage","mainPage","works_TopicItem","toTopicPage","works_LabelItem","Workspace_Save","works_StoreContext","Provider","LabelPage_TopicPage","doSwitch","App","works_Workspace","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2ICIzBC,eAFMC,IAAMC,iBCDZC,EAAA,CACXC,WADW,WAEP,MAAM,IAAIC,MAAM,qCCAhBD,EAAeD,EAAfC,WAEFE,EAAQ,CACVC,OAAQ,kBACRC,OAAQ,MACRC,QAAS,MACTC,SAAU,QACVC,QAAS,eACTC,gBAAiB,SAsBNC,EAjBG,SAAAC,GAAsD,IAAAC,EAAAD,EAAnDE,aAAmD,IAAAD,EAA3CX,IAA2CW,EAAAE,EAAAH,EAA7BI,eAA6B,IAAAD,EAAnBb,IAAmBa,EAC9DE,EAAQC,qBAAWpB,GAKzB,OACIqB,EAAAC,EAAAC,cAAA,OACIL,QAASA,EACTZ,MAAOA,GAENU,EAAMQ,KACPH,EAAAC,EAAAC,cAAA,QAAML,QAAS,SAAAO,GAAC,OAVJ,SAACA,EAAGT,GACpBS,EAAEC,kBACFP,EAAMQ,YAAYX,GAQMW,CAAYF,EAAGT,KAAnC,cCpBGY,EANF,SAACC,GAAD,OACTR,EAAAC,EAAAC,cAAA,OAAKjB,MAAO,CAACC,OAAQ,kBAAmBC,OAAQ,OAAQC,QAAS,SAC5DoB,EAAMC,WCYAC,EAdF,SAAAjB,GAA8C,IAA3CkB,EAA2ClB,EAA3CkB,KAA2CC,EAAAnB,EAArCoB,cAAqC,IAAAD,EAA5B,SAAAX,GAAC,OAAIA,GAAuBW,EAApBE,EAAoBrB,EAApBqB,cACnC,OACId,EAAAC,EAAAC,cAAA,UACKS,EAAKI,IAAI,SAAAC,GACN,OACIhB,EAAAC,EAAAC,cAAA,MAAIe,IAAKJ,EAAOG,IACXF,EAAcE,QCDxB,SAASE,EAATzB,GAA2D,IAAAC,EAAAD,EAAtCE,aAAsC,IAAAD,EAA9BZ,EAAMC,aAAwBW,EAChEI,GADgEL,EAAV0B,OAC9CpB,qBAAWpB,IACnByC,EAActB,EAAMqB,OAAOE,OAAO,SAAAC,GAAG,OAAIA,EAAIC,IAAM5B,EAAM4B,KACzDC,EAAgB1B,EAAM2B,iBAAiB9B,GACvC+B,EAAW5B,EAAM6B,UAAUhC,GAM3BiC,EACF5B,EAAAC,EAAAC,cAAC2B,EAAS,CACNlB,KAAMa,EACNX,OAAQ,SAAAiB,GAAC,OAAIA,EAAEP,IACfT,cAAe,SAAAgB,GAAC,OAAI9B,EAAAC,EAAAC,cAAA,gBAAQ4B,EAAE3B,KAAV,IAAgBH,EAAAC,EAAAC,cAAA,UAAQL,QAAS,SAAAO,GAAC,OARnCkB,EAQ0DQ,OAPjFhC,EAAMiC,gBAAgBT,EAAK3B,GADJ,IAAA2B,IAQiB,UAAhB,QAItBU,EAAY,SAACV,GACfxB,EAAMmC,cAAcX,EAAK3B,IAGvBuC,EACFlC,EAAAC,EAAAC,cAAA,UACKkB,EAAYL,IAAI,SAAApB,GACb,OACIK,EAAAC,EAAAC,cAACiC,EAAA,SAAD,CAAUlB,IAAKtB,EAAM4B,IACjBvB,EAAAC,EAAAC,cAAA,cAAMP,EAAMQ,KAAZ,IAAkBH,EAAAC,EAAAC,cAAA,UAAQL,QAAS,kBAAMmC,EAAUrC,KAAjC,UAAlB,SA3BkDyC,EA+CtCC,mBAAS1C,EAAMQ,MA/CuBmC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GA+C/DK,EA/C+DH,EAAA,GA+CrDI,EA/CqDJ,EAAA,GAAAK,EAgDxBN,mBAAS1C,EAAMiD,aAhDSC,EAAAN,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAgD/DG,EAhD+DD,EAAA,GAgD9CE,EAhD8CF,EAAA,GAuDtE,OACI7C,EAAAC,EAAAC,cAACiC,EAAA,SAAD,KACInC,EAAAC,EAAAC,cAAC8C,EAAD,KACIhD,EAAAC,EAAAC,cAAA,OAAKjB,MAxBC,CACdC,OAAQ,kBACRK,gBAAiB,WAsBT,SACUS,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,SAAO+C,MAAOR,EAAUS,SAAU,SAAA9C,GAAC,OAAIsC,EAAYtC,EAAE+C,OAAOF,WAEhEjD,EAAAC,EAAAC,cAAA,2BACiBF,EAAAC,EAAAC,cAAA,WACbF,EAAAC,EAAAC,cAAA,YAAU+C,MAAOH,EAAiBI,SAAU,SAAA9C,GAAC,OAAI2C,EAAmB3C,EAAE+C,OAAOF,WAEjFjD,EAAAC,EAAAC,cAAA,UAAQL,QAhBO,WACvB,IAAMuD,EAAOb,OAAAc,EAAA,EAAAd,CAAA,GAAO5C,EAAP,CAAcQ,KAAMsC,EAAUG,YAAaE,IACxDhD,EAAMwD,YAAYF,KAcV,iBAEJpD,EAAAC,EAAAC,cAAC8C,EAAD,yBACqBhD,EAAAC,EAAAC,cAAA,WAChB0B,GAEL5B,EAAAC,EAAAC,cAAC8C,EAAD,gBACYhD,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAC2B,EAAS,CACNlB,KAAMe,EACNb,OAAQ,SAAA0C,GAAC,OAAIA,EAAEhC,IACfT,cAAe,SAAAyC,GAAC,OAAIvD,EAAAC,EAAAC,cAAA,gBAAQqD,EAAEpD,KAAV,IAAgBH,EAAAC,EAAAC,cAAA,UAAQL,QAAS,SAAAO,GAAC,OAlClDoD,EAkCkED,OAjClFzD,EAAM2D,qBAAqB9D,EAAO6D,GADlB,IAAAA,IAkCgC,UAAhB,SAG5BxD,EAAAC,EAAAC,cAAC8C,EAAD,qBACiBhD,EAAAC,EAAAC,cAAA,WACZgC,GAELlC,EAAAC,EAAAC,cAAC8C,EAAD,oBACgBhD,EAAAC,EAAAC,cAAA,WACZF,EAAAC,EAAAC,cAAC2B,EAAS,CACNlB,KAAMb,EAAM4D,OACZ7C,OAAQ,SAAA0C,GAAC,OAAIA,EAAEhC,IACfT,cAAe,SAAAyC,GAAC,OAAIvD,EAAAC,EAAAC,cAAA,gBAAQqD,EAAEpD,KAAV,IAAgBH,EAAAC,EAAAC,cAAA,UAAQL,QAAS,SAAAO,GAAC,OAlDpDoD,EAkDiED,OAjD/EzD,EAAM6D,WAAWhE,EAAO6D,GADX,IAACA,IAkDkC,OAAhB,UC7FxC,IAAMvE,EAAQ,CACVC,OAAQ,kBACRC,OAAQ,MACRC,QAAS,MACTC,SAAU,QACVC,QAAS,eACTC,gBAAiB,UAeNqE,EAXG,SAAAnE,GAA2C,IAAAoE,EAAApE,EAAzC+D,aAAyC,IAAAK,EAAjC/E,EAAMC,aAA2B8E,EAAbhE,EAAaJ,EAAbI,QAC5C,OACIG,EAAAC,EAAAC,cAAA,OACIL,QAASA,EACTZ,MAAOA,GAENuE,EAAMrD,OCjBJ,SAASe,IACpB,MAAO,sDCDL4C,GAAW,EAmDjB,IAEeC,EARN,CACLC,UA/BgB,SAACC,GACjB,IAAIH,EAIF,OAjBeI,EAiBO,CAAED,SAhBnBE,MAgBO,SAhBI,CAChBC,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUR,KAEpBS,KAAK,SAAAC,GAAG,OAAIA,EAAIV,SAKjB,IAdeA,EAcXW,EAAO,IAAIC,KAAK,CAACL,KAAKC,UAAUT,IAAS,CAAEc,KAAM,6BACrDC,iBAAOH,EAAM,cA6BfI,SAtBe,SAAC7E,GAChB,IAAI0D,EAcF,OAAOK,MAAM,UACVQ,KAAK,SAAAC,GAAG,OAAIA,EAAIV,SAdnB,IAAMf,EAAS/C,EAAE+C,OAEjB,GADcA,EAAO+B,MACXC,OAAS,EAAG,CACpB,IAAMC,EAAOhF,EAAE+C,OAAO+B,MAAM,GACtBG,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACC,GACf,IAAMvB,EAAQQ,KAAKgB,MAAMD,EAAMrC,OAAOuC,QAEtC,OADAvC,EAAOF,MAAQ,KACRgB,GAEToB,EAAOM,WAAWP,MCtBXQ,MAff,WAAkB,IAAAxD,EACMC,mBAAS,GADfC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACPb,EADOe,EAAA,GACHuD,EADGvD,EAAA,GAEd,MAAO,CACHf,KACAuE,SAFG,WAGC,IAAMC,EAAOxE,EAAK,EAElB,OADAsE,EAAME,GACCA,GAEXC,QAPG,SAOMC,GACLJ,EAAMI,MCRVlH,EAAeD,EAAfC,WAGFmH,EAAkB,SAACC,EAAQC,GAC7B,MAAO,CAACD,EAAO5E,GAAI6E,EAAO7E,IAAI8E,QAG5BC,EAAuB,SAAC3G,EAAO6D,GACjC,MAAO,CAAC7D,EAAM4B,GAAIiC,EAAMjC,KAuLbgF,EApLE,WAEb,IAAMC,EAAcZ,IACda,EAAa,SAAAhH,GAEsB,IAAAiH,EAAAjH,EAAvBU,YAAuB,IAAAuG,EAAhB3H,IAAgB2H,EACjC,MAAO,CACHnF,GAAIiF,EAAYV,WAChB3F,OACAwG,QAAS,KAIfC,EAAa,SAAAC,GACyC,IAAAC,EAAAD,EAA1C1G,YAA0C,IAAA2G,EAAnC/H,IAAmC+H,EAAAC,EAAAF,EAArBjE,mBAAqB,IAAAmE,EAAP,GAAOA,EACpD,MAAO,CACHxF,GAAIiF,EAAYV,WAChB3F,OACAyC,cACAc,OAAQ,GACRiD,QAAS,GACTK,SAAU,KArBH5E,EAyBeC,mBAAS,IAzBxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAyBZ6E,EAzBY3E,EAAA,GAyBD4E,EAzBC5E,EAAA,GAAAK,EA0BeN,mBAAS,IA1BxBQ,EAAAN,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GA0BZwE,EA1BYtE,EAAA,GA0BDuE,EA1BCvE,EAAA,GAAAwE,EA2ByBhF,oBAAU,GA3BnCiF,EAAA/E,OAAAC,EAAA,EAAAD,CAAA8E,EAAA,GA2BZE,EA3BYD,EAAA,GA2BIE,EA3BJF,EAAA,GAAAG,EA4ByBpF,oBAAU,GA5BnCqF,EAAAnF,OAAAC,EAAA,EAAAD,CAAAkF,EAAA,GA4BZE,EA5BYD,EAAA,GA4BIE,EA5BJF,EAAA,GAAAG,EA6BiBxF,mBAAS,IA7B1ByF,EAAAvF,OAAAC,EAAA,EAAAD,CAAAsF,EAAA,GA6BZE,EA7BYD,EAAA,GA6BAE,EA7BAF,EAAA,GAAAG,EA8BiB5F,mBAAS,IA9B1B6F,EAAA3F,OAAAC,EAAA,EAAAD,CAAA0F,EAAA,GA8BZE,EA9BYD,EAAA,GA8BAE,EA9BAF,EAAA,GAAAG,EA+B2BhG,mBAAS,IA/BpCiG,EAAA/F,OAAAC,EAAA,EAAAD,CAAA8F,EAAA,GA+BZE,EA/BYD,EAAA,GA+BKE,EA/BLF,EAAA,GAkCbG,EAAWd,GAAkB,EAC7Be,EAFWnB,GAAkB,EAEHN,EAAUM,GAAkB,KACtDoB,EAAeF,EAAWtB,EAAUQ,GAAkB,KAGtDxG,EAASoB,OAAOqG,OAAO3B,GACvBvD,EAASnB,OAAOqG,OAAOzB,GAwBvB0B,EAAO,SAAC5E,GACVuC,EAAYR,QAAQ/B,EAAM1C,IAC1B2F,EAAajD,EAAMgD,WACnBG,EAAanD,EAAMkD,WACnBa,EAAc/D,EAAM8D,YACpBK,EAAcnE,EAAMkE,YACpBK,EAAmBvE,EAAMsE,kBAUvBO,EAAa,SAACC,EAAIC,GACpB,OAAOD,EAAG,KAAOC,EAAG,IAAMD,EAAG,KAAOC,EAAG,IA8CrCC,GAFY1G,OAAOqG,OAAOzB,GAEb,SAAA+B,GAAI,OAAI,SAAA3F,GAAC,OAAKuF,EAAWI,EAAM3F,MAElD,MAAO,CACHxB,gBADG,SACaoH,EAAIC,GAChB,IAAMF,EAAOhD,EAAgBiD,EAAIC,GACjCpB,EAAcD,EAAW1G,OAAO4H,EAAWC,MAE/CzF,qBALG,SAKkB9D,EAAO6D,GACxB,IAAM0F,EAAO5C,EAAqB3G,EAAO6D,GACzCgF,EAAmBD,EAAgBlH,OAAO4H,EAAWC,MAEzDvF,WATG,SASQhE,EAAO6D,GACd,IAAM0F,EAAO5C,EAAqB3G,EAAO6D,IAlBvB,SAAC0F,GACvB,OAAOX,EAAgBc,KAAK,SAAA9F,GAAC,OAAIuF,EAAWvF,EAAG2F,MAkBtCI,CAAkBJ,IACnBV,EAAkB,GAAAe,OAAAhH,OAAAiH,EAAA,EAAAjH,CAAKgG,GAAL,CAAsBW,MAGhDvH,UAlCc,SAAAhC,GACd,IAAM4B,EAAK5B,EAAM4B,GACXkI,EAAM,GAFWC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAGvB,QAAAC,EAAAC,EAAyBxB,EAAzByB,OAAAC,cAAAP,GAAAI,EAAAC,EAAAhE,QAAAmE,MAAAR,GAAA,EAA0C,KAAAS,EAAAL,EAAA7G,MAAAmH,EAAA7H,OAAAC,EAAA,EAAAD,CAAA4H,EAAA,GAA9BE,EAA8BD,EAAA,GAAzBE,EAAyBF,EAAA,GAClC7I,IAAO8I,GACPZ,EAAIc,KAAKD,IALM,MAAAE,GAAAb,GAAA,EAAAC,EAAAY,EAAA,YAAAd,GAAA,MAAAK,EAAAU,QAAAV,EAAAU,SAAA,WAAAd,EAAA,MAAAC,GAQvB,OAAOH,EAAI1I,IAAI,SAAAQ,GAAE,OAAI4F,EAAU5F,MA2B/BJ,SACAuC,SACAgH,SAzGa,SAACC,GACd,IAAMhL,EAAQiH,EAAuB+D,GACrCzD,EAAa3E,OAAAc,EAAA,EAAAd,CAAA,GAAK0E,EAAN1E,OAAAqI,EAAA,EAAArI,CAAA,GAAkB5C,EAAM4B,GAAK5B,MAwGzCkL,SArGa,SAACF,GACd,IAAMnH,EAAQiD,EAAuBkE,GACrCvD,EAAa7E,OAAAc,EAAA,EAAAd,CAAA,GAAK4E,EAAN5E,OAAAqI,EAAA,EAAArI,CAAA,GAAkBiB,EAAMjC,GAAKiC,MAoGzCsH,KAjGS,WACT,IAAM7G,EAAQ,CACV1C,GAAIiF,EAAYjF,GAChB0F,YACAE,YACAY,aACAI,aACAI,mBAEJ,OAAOxE,EAASC,UAAUC,IAyF1B4E,OACAH,eACAC,eACAoC,YAxBG,SAwBSpL,GACR6H,EAAkB7H,EAAM4B,KAE5ByJ,YA3BG,SA2BSxH,GACRoE,EAAkBpE,EAAMjC,KAE5BU,cAvEkB,SAAChC,EAAGgL,GACtB,IAAM/B,EAAOhD,EAAgBjG,EAAGgL,IALf,SAAC/B,GAClB,OAAOnB,EAAWsB,KAAK,SAAA/H,GAAG,OAAIwH,EAAWI,EAAM5H,MAK1C4J,CAAahC,IACdlB,EAAa,GAAAuB,OAAAhH,OAAAiH,EAAA,EAAAjH,CAAKwF,GAAL,CAAiBmB,MAqElCnB,aACAtG,iBAjEqB,SAAC9B,GACtB,IAAM4B,EAAK5B,EAAM4B,GACXkI,EAAM,GAFoB0B,GAAA,EAAAC,GAAA,EAAAC,OAAAxB,EAAA,IAGhC,QAAAyB,EAAAC,EAAyBxD,EAAzBiC,OAAAC,cAAAkB,GAAAG,EAAAC,EAAAxF,QAAAmE,MAAAiB,GAAA,EAAqC,KAAAK,EAAAF,EAAArI,MAAAwI,EAAAlJ,OAAAC,EAAA,EAAAD,CAAAiJ,EAAA,GAAzBE,EAAyBD,EAAA,GAApBE,EAAoBF,EAAA,GAC7BC,IAAQnK,GACRkI,EAAIc,KAAKoB,GAETA,IAAQpK,GACRkI,EAAIc,KAAKmB,IARe,MAAAlB,GAAAY,GAAA,EAAAC,EAAAb,EAAA,YAAAW,GAAA,MAAAI,EAAAd,QAAAc,EAAAd,SAAA,WAAAW,EAAA,MAAAC,GAWhC,OAAO5B,EAAI1I,IAAI,SAAAQ,GAAE,OAAI0F,EAAU1F,MAuD/B+B,YAjCG,SAiCSsI,GACR1E,EAAa3E,OAAAc,EAAA,EAAAd,CAAA,GAAK0E,EAAN1E,OAAAqI,EAAA,EAAArI,CAAA,GAAkBqJ,EAAOrK,GAAKqK,MAE9CtL,YApCG,SAoCSX,GAGR,IAAMkM,EAAUtJ,OAAOuJ,YACnBvJ,OAAOwJ,QAAQ9E,GAAW5F,OAAO,SAAA2K,GAAK,OAAIA,EAAM,IAAMrM,EAAM4B,MAEhE2F,EAAa2E,GAGb7D,EAAcD,EAAW1G,OAAO,SAAA4K,GAAA,IAAAC,EAAA3J,OAAAC,EAAA,EAAAD,CAAA0J,EAAA,GAAEP,EAAFQ,EAAA,GAAOP,EAAPO,EAAA,UAAgBR,IAAQ/L,EAAM4B,IAAMoK,IAAQhM,EAAM4B,MAClFiH,EAAmBD,EAAgBlH,OAAO,SAAA8K,GAAA,OAAA5J,OAAAC,EAAA,EAAAD,CAAA4J,EAAA,QAAiBxM,EAAM4B,SCpLvE6K,EAAW,SAAA3M,GAAqB,IAAnB4M,EAAmB5M,EAAnB4M,KAAMxM,EAAaJ,EAAbI,QACrB,OACIG,EAAAC,EAAAC,cAAC8C,EAAD,KACIhD,EAAAC,EAAAC,cAAA,UAAQL,QAASA,GAAUwM,KAKjCC,EAAO,SAAAzF,GAAe,IAAbhH,EAAagH,EAAbhH,QACX,OAAOG,EAAAC,EAAAC,cAACqM,EAAD,CAAU1M,QAASA,EAASwM,KAAK,UAmG5BG,EAhGE,WACd,IAAMC,EACI,OADJA,EAES,YAFTA,EAGS,YAET3M,EAAQyG,IACPpF,EAAkBrB,EAAlBqB,OAAQuC,EAAU5D,EAAV4D,OAPKtB,EAQcC,mBAAS,IARvBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAQbsK,EARapK,EAAA,GAQFqK,EARErK,EAAA,GAAAK,EAScN,mBAAS,IATvBQ,EAAAN,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GASbiK,EATa/J,EAAA,GASFgK,EATEhK,EAAA,GAAAwE,EAU4BhF,mBAAS,IAVrCiF,EAAA/E,OAAAC,EAAA,EAAAD,CAAA8E,EAAA,GAUbyF,EAVaxF,EAAA,GAUKyF,EAVLzF,EAAA,GAAAG,EAWIpF,mBAASoK,GAXb/E,EAAAnF,OAAAC,EAAA,EAAAD,CAAAkF,EAAA,GAWbuF,EAXatF,EAAA,GAWPuF,EAXOvF,EAAA,GAkCdwF,EAAc,kBAAMD,EAAQR,IAiB5BU,EACFnN,EAAAC,EAAAC,cAACiC,EAAA,SAAD,KACInC,EAAAC,EAAAC,cAAC8C,EAAD,CAAM/B,IAAI,KAAV,kBAEKE,EAAOJ,IAAI,SAAApB,GAAK,OAAIK,EAAAC,EAAAC,cAACkN,EAAD,CAAWnM,IAAKtB,EAAMQ,KAAMR,MAAOA,EAAOE,QAAS,kBAhChE,SAACF,GACjBG,EAAMiL,YAAYpL,GAClBsN,EAAQR,GA8B8EY,CAAY1N,QAC1FK,EAAAC,EAAAC,cAAA,WAHJ,kBAKKwD,EAAO3C,IAAI,SAAAyC,GAAK,OAAIxD,EAAAC,EAAAC,cAACoN,EAAD,CAAWrM,IAAKuC,EAAMrD,KAAMqD,MAAOA,EAAO3D,QAASqN,OAE5ElN,EAAAC,EAAAC,cAAC8C,EAAD,CAAM/B,IAAI,KAAV,mBACoBjB,EAAAC,EAAAC,cAAA,WADpB,SAEUF,EAAAC,EAAAC,cAAA,SAAO+C,MAAOyJ,EAAWxJ,SA9BjB,SAAA9C,GAAC,OAAIuM,EAAavM,EAAE+C,OAAOF,UA4B7C,IAEmEjD,EAAAC,EAAAC,cAAA,WAFnE,gBAGiBF,EAAAC,EAAAC,cAAA,SAAO+C,MAAO6J,EAAkB5J,SAAU,SAAA9C,GAAC,OAAI2M,EAAoB3M,EAAE+C,OAAOF,UAH7F,IAGwGjD,EAAAC,EAAAC,cAAA,WACpGF,EAAAC,EAAAC,cAAA,UAAQL,QAnDH,WACbC,EAAM4K,SAAS,CAACvK,KAAMuM,EAAW9J,YAAakK,IAC9CH,EAAa,IACbI,EAAoB,MAgDZ,WAGJ/M,EAAAC,EAAAC,cAAC8C,EAAD,wBACoBhD,EAAAC,EAAAC,cAAA,WADpB,SAEUF,EAAAC,EAAAC,cAAA,SAAO+C,MAAO2J,EAAW1J,SAAU,SAAA9C,GAAC,OAAIyM,EAAazM,EAAE+C,OAAOF,UAFxE,IAEmFjD,EAAAC,EAAAC,cAAA,WAC/EF,EAAAC,EAAAC,cAAA,UAAQL,QApDH,WACbC,EAAM+K,SAAS,CAAC1K,KAAMyM,IACtBC,EAAa,MAkDL,WAEJ7M,EAAAC,EAAAC,cAACqN,EAAD,CAAM1N,QA5CC,kBAAMC,EAAMgL,UA6CnB9K,EAAAC,EAAAC,cAAC8C,EAAD,wBACoBhD,EAAAC,EAAAC,cAAA,SAAO6E,KAAK,OAAO7B,SAtC9B,SAAA9C,GACf,IAAM+C,EAAS/C,EAAE+C,OAEjB,GADcA,EAAO+B,MACXC,OAAS,EAAG,CACpB,IAAMC,EAAOhF,EAAE+C,OAAO+B,MAAM,GACtBG,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACC,GACf,IAAMvB,EAAQQ,KAAKgB,MAAMD,EAAMrC,OAAOuC,QACtCvC,EAAOF,MAAQ,KACfnD,EAAM+I,KAAK5E,IAEboB,EAAOM,WAAWP,SAyCtB,OACIpF,EAAAC,EAAAC,cAACsN,EAAaC,SAAd,CAAuBxK,MAAOnD,GAVjB,WACb,OAAQkN,GACJ,KAAKP,EAAY,OAAOU,EACxB,KAAKV,EAAiB,OAAOzM,EAAAC,EAAAC,cAACgB,EAAD,CAAWvB,MAAOG,EAAM4I,eACrD,KAAK+D,EAAiB,OAAOzM,EAAAC,EAAAC,cAACwN,EAAD,MAC7B,QAAS,OAAOP,GAMfQ,GACD3N,EAAAC,EAAAC,cAACqM,EAAD,CAAUF,KAAK,eAAexM,QAAS,kBAAMoN,EAAQR,QC5ElDmB,EAPH,kBACV5N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2N,EAAD,QCpBgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpO,EAAAC,EAAAC,cAACmO,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/J,KAAK,SAAAgK,GACjCA,EAAaC","file":"static/js/main.b784fc0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\n\nconst StoreContext = React.createContext()\n\nexport default StoreContext\n","\nexport default {\n    isRequired () {\n        throw new Error('A required parameter is missing')\n    }\n}","import React, { useContext } from 'react'\nimport StoreContext from './StoreContext'\nimport utils from 'utils'\nconst { isRequired } = utils\n\nconst style = {\n    border: '1px solid black',\n    margin: '5px',\n    padding: '3px',\n    maxWidth: '100px',\n    display: 'inline-block',\n    backgroundColor: 'green'\n}\n\n\n// todo: import isRequired from top util service\nconst TopicItem = ({ topic = isRequired(), onClick = isRequired() }) => {\n    const store = useContext(StoreContext)\n    const removeTopic = (e, topic) => {\n        e.stopPropagation()\n        store.removeTopic(topic)\n    }\n    return (\n        <div\n            onClick={onClick}\n            style={style}\n        >\n            {topic.name}\n            <span onClick={e => removeTopic(e, topic)}>X</span>\n        </div>\n    )\n}\n\nexport default TopicItem","import React from 'react';\n\nconst Area = (props) => (\n    <div style={{border: '1px solid black', margin: '20px', padding: '10px'}}> \n        {props.children}\n    </div>\n)\n\nexport default Area","import React from 'react'\n\nconst List = ({ list, getKey = a => a, renderContent }) => {\n    return (\n        <ul>\n            {list.map(item => {\n                return (\n                    <li key={getKey(item)}>\n                        {renderContent(item)}\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n\nexport default List","import React, { Fragment, useContext, useState } from 'react'\nimport utils from 'utils'\nimport Area from './Area'\nimport StoreContext from './StoreContext'\nimport List from './List'\n\n\nexport default function TopicPage({ topic = utils.isRequired(), topics }) {\n    const store = useContext(StoreContext)\n    const otherTopics = store.topics.filter(one => one.id != topic.id)\n    const similarTopics = store.getSimilarTopics(topic)\n    const myLabels = store.getLabels(topic)\n\n    const removeSimilarTopic = one => {\n        store.removeTopicLink(one, topic)\n    }\n\n    const similarTopicList = (\n        <List {...{\n            list: similarTopics,\n            getKey: t => t.id,\n            renderContent: t => <span> {t.name} <button onClick={e => removeSimilarTopic(t)}>Remove</button> </span>\n        }} />\n    )\n\n    const linkTopic = (one) => {\n        store.linkTwoTopics(one, topic)\n    }\n\n    const otherTopicList = (\n        <ul>\n            {otherTopics.map(topic => {\n                return (\n                    <Fragment key={topic.id}>\n                        <li> {topic.name} <button onClick={() => linkTopic(topic)}> link </button> </li>\n                    </Fragment>\n                )\n            })}\n        </ul>\n    )\n\n    const spanStyle = {\n        border: '1px solid black',\n        backgroundColor: 'yellow'\n    }\n\n    const addLabel = (label) => {\n        store.labelTopic(topic, label)\n    }\n\n    const removeLabel = label => {\n        store.removeLabelFromTopic(topic, label)\n    }\n\n    const [editName, setEditName] = useState(topic.name)\n    const [editDescription, setEditDescription] = useState(topic.description)\n\n    const doEditCurrentTopic = () => {\n        const updated = {...topic, name: editName, description: editDescription}\n        store.updateTopic(updated)\n    }\n\n    return (\n        <Fragment>\n            <Area>\n                <div style={spanStyle}>\n                    Name: <br />\n                    <input value={editName} onChange={e => setEditName(e.target.value)} />\n                </div>\n                <div>\n                    Description: <br />\n                    <textarea value={editDescription} onChange={e => setEditDescription(e.target.value)} />\n                </div>\n                <button onClick={doEditCurrentTopic}>Save Changes</button>\n            </Area>\n            <Area>\n                Similar Topics:  <br />\n                {similarTopicList}\n            </Area>\n            <Area>\n                Labels: <br />\n                <List {...{\n                    list: myLabels,\n                    getKey: l => l.id,\n                    renderContent: l => <span> {l.name} <button onClick={e => removeLabel(l)}>Remove</button> </span>\n                }} />\n            </Area>\n            <Area>\n                Other nodes: <br />\n                {otherTopicList}\n            </Area>\n            <Area>\n                All labels: <br />\n                <List {...{\n                    list: store.labels,\n                    getKey: l => l.id,\n                    renderContent: l => <span> {l.name} <button onClick={e => addLabel(l)}>Add</button> </span>\n                }} />\n            </Area>\n        </Fragment>\n    )\n}","import React from 'react'\nimport utils from 'utils'\n\nconst style = {\n    border: '1px solid black',\n    margin: '5px',\n    padding: '3px',\n    maxWidth: '100px',\n    display: 'inline-block',\n    backgroundColor: 'yellow'\n}\n\n\nconst LabelItem = ({label = utils.isRequired(), onClick}) => {\n    return (\n        <div \n            onClick={onClick}\n            style={style}\n        > \n            {label.name} \n        </div>\n    )\n}\n\nexport default LabelItem","import React from 'react'\n\nexport default function TopicPage () {\n    return 'oh label page is different'\n}","import { saveAs } from 'file-saver'\n\nconst noServer = true\n\nfunction getResource() {\n  function post(url, json) {\n    return fetch(url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(json)\n    })\n      .then(res => res.json())\n  }\n\n  const saveGraph = (graph) => {\n    if (noServer) {\n      var blob = new Blob([JSON.stringify(graph)], { type: \"text/plain;charset=utf-8\" });\n      saveAs(blob, \"graph.txt\");\n    } else {\n      return post('/graph', { graph })\n    }\n\n  }\n\n  const getGraph = (e) => {\n    if (noServer) {\n      const target = e.target\n      const files = target.files\n      if (files.length > 0) {\n        const file = e.target.files[0]\n        const reader = new FileReader()\n        reader.onload = (event) => {\n          const graph = JSON.parse(event.target.result)\n          target.value = null\n          return graph\n        }\n        reader.readAsText(file)\n      }\n    } else {\n      return fetch('/graph')\n        .then(res => res.json())\n    }\n  }\n\n  return {\n    saveGraph,\n    getGraph,\n  }\n}\n\nconst resource = getResource()\n\nexport default resource\n\n\n\n\n","import {useState}  from 'react'\n\nfunction useId () {\n    const [id, setId] = useState(0)\n    return {\n        id,\n        generate () {\n            const next = id + 1\n            setId(next)\n            return next\n        },\n        restore (lastId) {\n            setId(lastId)\n        }\n    }\n}\n\nexport default useId\n\n","import { useState } from 'react'\nimport resource from 'resource'\nimport utils from 'utils'\nimport useId from 'useId'\nconst { isRequired } = utils\n\n\nconst createTopicLink = (topic1, topic2) => {\n    return [topic1.id, topic2.id].sort() // small - big\n}\n\nconst createTopicLabelLink = (topic, label) => {\n    return [topic.id, label.id]\n}\n\nconst useStore = () => {\n    // so far we have no order\n    const idGenerator = useId()\n    const labelFuncs = {\n        // could refactor out the core if new id is not needed\n        createLabel({ name = isRequired() }) {\n            return {\n                id: idGenerator.generate(),\n                name,\n                similar: []\n            }\n        }\n    }\n    const topicFuncs = {\n        createTopic({ name = isRequired(), description = '', }) {\n            return {\n                id: idGenerator.generate(),\n                name,\n                description,\n                labels: [],\n                similar: [],\n                comments: [],\n            }\n        }\n    }\n    const [topicDict, setTopicDict] = useState({})\n    const [labelDict, setLabelDict] = useState({})\n    const [currentTopicId, setCurrentTopicId] = useState(-1)\n    const [currentLabelId, setCurrentLabelId] = useState(-1)\n    const [topicLinks, setTopicLinks] = useState([])\n    const [labelLinks, setLabelLinks] = useState([])\n    const [topicLabelLinks, setTopicLabelLinks] = useState([])\n\n    const hasTopic = currentTopicId > -1\n    const hasLabel = currentLabelId > -1\n    const currentTopic = hasTopic ? topicDict[currentTopicId] : null\n    const currentLabel = hasLabel ? labelDict[currentLabelId] : null\n\n    // derived values\n    const topics = Object.values(topicDict)\n    const labels = Object.values(labelDict)\n\n    const addTopic = (attrs) => {\n        const topic = topicFuncs.createTopic(attrs)\n        setTopicDict({ ...topicDict, [topic.id]: topic })\n    }\n\n    const addLabel = (attrs) => {\n        const label = labelFuncs.createLabel(attrs)\n        setLabelDict({ ...labelDict, [label.id]: label })\n    }\n\n    const save = () => {\n        const graph = {\n            id: idGenerator.id,\n            topicDict,\n            labelDict,\n            topicLinks,\n            labelLinks,\n            topicLabelLinks,\n        }\n        return resource.saveGraph(graph)\n    }\n\n    const load = (graph) => {\n        idGenerator.restore(graph.id)\n        setTopicDict(graph.topicDict)\n        setLabelDict(graph.labelDict)\n        setTopicLinks(graph.topicLinks)\n        setLabelLinks(graph.labelLinks)\n        setTopicLabelLinks(graph.topicLabelLinks)\n    }\n\n    const loadFromServer = () => {\n        return resource.getGraph()\n            .then((graph) => {\n                load(graph)\n            })\n    }\n\n    const isSameLink = (l1, l2) => {\n        return l1[0] === l2[0] && l1[1] === l2[1]\n    }\n\n    const hasTopicLink = (link) => {\n        return topicLinks.some(one => isSameLink(link, one))\n    }\n\n    const linkTwoTopics = (a, b) => {\n        const link = createTopicLink(a, b)\n        if (!hasTopicLink(link)) {\n            setTopicLinks([...topicLinks, link])\n        }\n    }\n\n    // todo: memoize if expensive\n    const getSimilarTopics = (topic) => {\n        const id = topic.id\n        const ids = []\n        for (const [id1, id2] of topicLinks) {\n            if (id1 === id) {\n                ids.push(id2)\n            }\n            if (id2 === id) {\n                ids.push(id1)\n            }\n        }\n        return ids.map(id => topicDict[id])\n    }\n\n    const getLabels = topic => {\n        const id = topic.id\n        const ids = []\n        for (const [tid, lid] of topicLabelLinks) {\n            if (id === tid) {\n                ids.push(lid)\n            }\n        }\n        return ids.map(id => labelDict[id])\n    }\n\n    const hasTopicLabelLink = (link) => {\n        return topicLabelLinks.some(l => isSameLink(l, link))\n    }\n\n    const allLabels = Object.values(labelDict)\n\n    const notEqualTo = link => l => !isSameLink(link, l)\n\n    return {\n        removeTopicLink(t1, t2) {\n            const link = createTopicLink(t1, t2)\n            setTopicLinks(topicLinks.filter(notEqualTo(link)))\n        },\n        removeLabelFromTopic(topic, label) {\n            const link = createTopicLabelLink(topic, label)\n            setTopicLabelLinks(topicLabelLinks.filter(notEqualTo(link)))\n        },\n        labelTopic(topic, label) {\n            const link = createTopicLabelLink(topic, label)\n            if (!hasTopicLabelLink(link)) {\n                setTopicLabelLinks([...topicLabelLinks, link])\n            }\n        },\n        getLabels,\n        topics,\n        labels,\n        addTopic,\n        addLabel,\n        save,\n        load,\n        currentTopic,\n        currentLabel,\n        changeTopic(topic) {\n            setCurrentTopicId(topic.id)\n        },\n        changeLabel(label) {\n            setCurrentLabelId(label.id)\n        },\n        linkTwoTopics,\n        topicLinks,\n        getSimilarTopics,\n        updateTopic(newOne) {\n            setTopicDict({ ...topicDict, [newOne.id]: newOne })\n        },\n        removeTopic(topic) {\n            // remove from dict\n            // TODO: The problem, entries will return string\n            const newDict = Object.fromEntries(\n                Object.entries(topicDict).filter(entry => entry[0] != topic.id)\n            )\n            setTopicDict(newDict)\n\n            // remove relations\n            setTopicLinks(topicLinks.filter(([id1, id2]) => id1 !== topic.id && id2 !== topic.id))\n            setTopicLabelLinks(topicLabelLinks.filter(([id]) => id !== topic.id))\n        }\n    }\n}\n\nexport default useStore","import React, {useState, Fragment} from 'react';\nimport TopicItem from './TopicItem'\nimport TopicPage from './TopicPage'\nimport LabelItem from './LabelItem'\nimport LabelPage from './LabelPage'\nimport Area from './Area'\nimport StoreContext from './StoreContext'\nimport useStore from './useStore'\nimport resource from 'resource'\n\nconst DoButton = ({text, onClick}) => {\n    return (\n        <Area>\n            <button onClick={onClick}>{text}</button>\n        </Area>\n    )\n}\n\nconst Save = ({onClick}) => {\n    return <DoButton onClick={onClick} text=\"Save\" />\n}\n\nconst Workspace = () => {\n    const views = {\n        main: 'main',\n        topicPage: 'topicPage',\n        labelPage: 'labelPage'\n    }\n    const store = useStore()\n    const {topics, labels} = store\n    const [topicName, setTopicName] = useState('')\n    const [labelName, setLabelName] = useState('')\n    const [topicDescription, setTopicDescription] = useState('')\n    const [view, setView] = useState(views.main)\n\n    const addTopic = () => {\n        store.addTopic({name: topicName, description: topicDescription})\n        setTopicName('')\n        setTopicDescription('')\n    }\n    const addLabel = () => {\n        store.addLabel({name: labelName})\n        setLabelName('')\n    }\n    \n    const toTopicPage = (topic) => {\n        store.changeTopic(topic)\n        setView(views.topicPage)\n    }\n\n    const onSave = () => store.save()\n\n    const onLoad = () => store.load()\n\n    const onChangeTopicName = e => setTopicName(e.target.value)\n\n    const toLabelPage = () => setView(views.labelPage)\n\n    const onUpload = e => {\n      const target = e.target\n      const files = target.files\n      if (files.length > 0) {\n        const file = e.target.files[0]\n        const reader = new FileReader()\n        reader.onload = (event) => {\n          const graph = JSON.parse(event.target.result)\n          target.value = null\n          store.load(graph)\n        }\n        reader.readAsText(file)\n      }\n    }\n\n    const mainPage = (\n        <Fragment>\n            <Area key='1'> \n                Current topics: \n                {topics.map(topic => <TopicItem key={topic.name} topic={topic} onClick={() => toTopicPage(topic)} />)}\n                <br/>\n                Current labels: \n                {labels.map(label => <LabelItem key={label.name} label={label} onClick={toLabelPage} />)}\n            </Area>\n            <Area key='2'> \n                Create a topic: <br/>\n                Name: <input value={topicName} onChange={onChangeTopicName} /> <br/>\n                Description: <input value={topicDescription} onChange={e => setTopicDescription(e.target.value)} /> <br/>\n                <button onClick={addTopic}>Create</button>\n\n            </Area>\n            <Area> \n                Create a label: <br/>\n                Name: <input value={labelName} onChange={e => setLabelName(e.target.value)} /> <br/>\n                <button onClick={addLabel}>Create</button>\n            </Area>\n            <Save onClick={onSave}/>\n            <Area>\n                Load from file: <input type=\"file\" onChange={onUpload} />\n            </Area>\n        </Fragment>\n    )\n\n    const doSwitch = () => {\n        switch (view) {\n            case views.main: return mainPage\n            case views.topicPage: return <TopicPage topic={store.currentTopic} />\n            case views.labelPage: return <LabelPage />\n            default: return mainPage\n        }\n    }\n\n    return (\n        <StoreContext.Provider value={store}>\n            {doSwitch()}\n            <DoButton text=\"to main page\" onClick={() => setView(views.main)} />\n        </StoreContext.Provider>\n    )\n}\n\nexport default  Workspace","import React, {useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Workspace from './works/Workspace'\n\nconst Test = () => {\n  const [text, setText] = useState('')\n  const [info, setInfo] = useState('')\n\n  const onClick = () => {\n    const number = Math.random()\n    setText('changed yo' + number)\n  }\n  const onChange = e => setText(e.target.value)\n  return [\n    <div style={{margin: '30px', border: '1px solid black', width: '300px'}}>\n      Testing area <br/>\n      <input value={text} onChange={onChange} /> <br/>\n      <button >send</button> <br/>\n      <button> get </button> <br/>\n      <div>content: {JSON.stringify(info)}</div>\n    </div>,\n    <div style={{border: '1px solid black', margin: '20px'}}> \n      Create a topic\n      Name: <input />\n    </div>,\n    <Workspace/>\n  ]\n}\n\nconst App = () => (\n  <div>\n    <Workspace />\n  </div>\n)\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}