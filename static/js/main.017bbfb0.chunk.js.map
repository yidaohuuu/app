{"version":3,"sources":["logo.svg","works/StoreContext.js","utils.js","works/Tag.js","works/DeleteTag.js","works/TopicItem.js","works/ItemListWrapper.js","works/List.js","works/Card.js","works/Input.js","works/Label.js","works/Field.js","works/FooterLink.js","works/addTopic/AddTopic.js","works/addTopic/useAddTopic.js","works/InputField.js","works/addLabel/AddLabel.js","works/addLabel/useAddLabel.js","works/PlusTag.js","works/Hero.js","works/TopicPage.js","works/ControlTag.js","works/LabelItem.js","works/LabelPage.js","works/Area.js","resource.js","useId.js","works/useStore.js","works/Page.js","works/Button.js","works/FileInput.js","works/Workspace.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","StoreContext","React","createContext","utils","isRequired","Error","stopPropagation","e","Tag","_ref","addOn","colorClass","onClick","item","react_default","a","createElement","className","concat","name","DeleteTag","_ref$onClick","_ref$item","_ref$onDelete","onDelete","_ref$colorClass","works_Tag","Object","assign","TopicItem","_ref$topic","topic","store","useContext","works_DeleteTag","removeTopic","ItemListWrapper","children","List","list","renderContent","length","map","Card","title","footer","Input","value","onChange","type","Label","Field","FooterLink","text","href","AddTopic","topicName","onChangeTopicName","topicDescription","setTopicDescription","addTopic","works_Card","works_FooterLink","works_Field","works_Label","works_Input","target","useAddTopic","_useState","useState","_useState2","slicedToArray","setTopicName","_useState3","_useState4","added","description","InputField","label","AddLabel","labelName","setLabelName","addLabel","works_InputField","useAddLabel","PlusTag","props","onAdd","Hero","TopicPage","topics","otherTopics","filter","one","id","similarTopics","getSimilarTopics","myLabels","getLabels","rawAddTopic","addTopicProps","objectSpread","linkTwoTopics","rawAddLabel","addLabelProps","labelTopic","linkTopic","react","style","marginBottom","works_Hero","works_List","l","key","removeLabelFromTopic","display","t","removeTopicLink","addLabel_AddLabel","addTopic_AddTopic","works_PlusTag","labels","ControlTag","_ref$text","LabelItem","_ref$label","LabelPage","getTopicsByLabel","topicsView","Area","noServer","resource","saveGraph","graph","json","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","res","blob","Blob","saveAs","getGraph","files","file","reader","FileReader","onload","event","parse","result","readAsText","useId","setId","generate","next","restore","lastId","createTopicLink","topic1","topic2","sort","createTopicLabelLink","useStore","idGenerator","labelFuncs","_ref$name","similar","topicFuncs","_ref2","_ref2$name","_ref2$description","comments","topicDict","setTopicDict","labelDict","setLabelDict","_useState5","_useState6","currentTopicId","setCurrentTopicId","_useState7","_useState8","currentLabelId","setCurrentLabelId","_useState9","_useState10","topicLinks","setTopicLinks","_useState11","_useState12","labelLinks","setLabelLinks","_useState13","_useState14","topicLabelLinks","setTopicLabelLinks","hasLabel","currentTopic","currentLabel","values","load","isSameLink","l1","l2","notEqualTo","link","topicIds","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","_ref5","_ref4","topicId","push","err","return","t1","t2","some","hasTopicLabelLink","toConsumableArray","ids","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref11","_ref10","tid","lid","attrs","defineProperty","save","changeTopic","changeLabel","b","hasTopicLink","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref8","_ref7","id1","id2","updateTopic","newOne","newDict","fromEntries","entries","entry","_ref12","_ref13","_ref14","Page","margin","Button","FileInput","DoButton","works_Area","works_Button","Save","Workspace_DoButton","Workspace","views","view","setView","mainPage","works_TopicItem","toTopicPage","works_LabelItem","toLabelPage","Workspace_Save","works_FileInput","works_StoreContext","Provider","works_Page","doSwitch","App","works_Workspace","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.017bbfb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\n\nconst StoreContext = React.createContext()\n\nexport default StoreContext\n","\nexport default {\n    isRequired () {\n        throw new Error('A required parameter is missing')\n    },\n    stopPropagation (e) {\n        e.stopPropagation()\n    }\n}","import React from 'react'\n\nconst Tag = ({addOn, colorClass, onClick, item}) => {\n    return (\n        <div className=\"control\"\n            onClick={onClick}\n        >\n            <div className=\"tags has-addons\">\n                <a className={`tag ${colorClass}`}>{item.name}</a>\n                {addOn}\n            </div>\n        </div>\n    )\n}\n\nexport default Tag","import React from 'react'\nimport utils from 'utils'\nimport Tag from './Tag'\nconst {isRequired} = utils\n\nconst DeleteTag = ({onClick = isRequired(), item = isRequired(), onDelete = isRequired(), colorClass = 'is-link'}) => {\n    return (\n        <Tag {...{onClick, colorClass, item}}  addOn={(\n            <a className=\"tag is-delete\" onClick={e => onDelete(e, item)}></a>\n        )} />\n    )\n}\n\nexport default DeleteTag","import React, { useContext } from 'react'\nimport StoreContext from './StoreContext'\nimport utils from 'utils'\nimport DeleteTag from './DeleteTag'\nconst { isRequired } = utils\n\nconst TopicItem = ({ topic = isRequired(), onClick = isRequired() }) => {\n    const store = useContext(StoreContext)\n    const removeTopic = (e, topic) => {\n        e.stopPropagation()\n        store.removeTopic(topic)\n    }\n    return (\n        <DeleteTag {...{\n            onClick, item: topic, onDelete: removeTopic\n        }} />\n    )\n}\n\nexport default TopicItem","import React from 'react'\n\nexport default function ItemListWrapper ({children}) {\n    return (\n        <div className=\"field is-grouped is-grouped-multiline\">\n            {children}\n        </div>\n    )\n}\n\n\n","import React from 'react'\nimport ItemListWrapper from './ItemListWrapper'\n\nconst List = ({ list, renderContent }) => {\n    return (\n        list.length > 0\n            ? (\n                <ItemListWrapper>\n                    {list.map(item => {\n                        return (renderContent(item))\n                    })}\n                </ItemListWrapper>\n            )\n            : 'None'\n    )\n}\n\nexport default List","import React from 'react'\n\nconst Card = ({ title, children, footer }) => (\n    <div className=\"card\">\n        <header className=\"card-header\">\n            <p className=\"card-header-title\">{title}</p>\n        </header>\n        <div className=\"card-content\">\n            <div className=\"content\">\n                {children}\n            </div>\n        </div>\n        {\n            footer\n                ? (\n                    <footer className=\"card-footer\">\n                        {footer}\n                    </footer>\n                )\n                : null\n        }\n    </div>\n)\n\nexport default Card","import React from 'react'\n\nconst Input = ({value, onChange}) => (\n    <div className=\"control\">\n        <input type=\"text\" className=\"input\" value={value} onChange={onChange} />\n    </div>\n)\n\nexport default Input","import React from 'react'\n\nconst Label = ({children}) => (\n    <label className=\"label\">{children}</label>\n)\n\nexport default Label","import React from 'react'\n\nconst Field = ({children}) => (\n    <div className=\"field\">{children}</div>\n)\n\nexport default Field","import React from 'react'\n\nconst FooterLink = ({text, onClick}) => (\n    <a href=\"#\" className=\"card-footer-item\" onClick={onClick}>{text}</a>\n)\n\nexport default FooterLink\n\n","import React from 'react'\nimport Card from '../Card'\nimport Input from '../Input'\nimport Label from '../Label'\nimport Field from '../Field'\nimport FooterLink from '../FooterLink'\n\nconst AddTopic = ({ topicName, onChangeTopicName, topicDescription, setTopicDescription, addTopic }) => {\n    return (\n        <Card title=\"Add Topic\" footer={(\n            <FooterLink text=\"Add\" onClick={addTopic} />\n        )}>\n            <Field>\n                <Label>Name</Label>\n                <Input value={topicName} onChange={onChangeTopicName} />\n            </Field>\n            <Field>\n                <Label>Description</Label>\n                <Input value={topicDescription} onChange={e => setTopicDescription(e.target.value)} />\n            </Field>\n        </Card>\n    )\n}\n\nexport default AddTopic","import { useState, useContext } from 'react'\n\nfunction useAddTopic(store) {\n    const [topicName, setTopicName] = useState('')\n    const [topicDescription, setTopicDescription] = useState('')\n    const addTopic = () => {\n        const added = store.addTopic({ name: topicName, description: topicDescription })\n        setTopicName('')\n        setTopicDescription('')\n        return added\n    }\n    const onChangeTopicName = e => setTopicName(e.target.value)\n    return {\n        topicName,\n        topicDescription,\n        addTopic,\n        onChangeTopicName,\n        setTopicDescription,\n    }\n}\n\nexport default useAddTopic","import React from 'react'\nimport Field from './Field'\nimport Label from './Label'\nimport Input from './Input'\n\nconst InputField = ({label, value, onChange}) => (\n    <Field>\n        <Label>{label}</Label>\n        <Input value={value} onChange={onChange}></Input>\n    </Field>\n)\n\nexport default InputField","import React from 'react'\nimport Card from '../Card'\nimport InputField from '../InputField'\nimport FooterLink from '../FooterLink'\n\nconst AddLabel = ({ labelName, setLabelName, addLabel }) => {\n    return (\n        <Card title=\"Add Label\" footer={<FooterLink text=\"Add\" onClick={addLabel} />}>\n            <InputField label=\"Name\" value={labelName} onChange={e => setLabelName(e.target.value)} />\n        </Card>\n    )\n}\n\nexport default AddLabel","import {useState} from 'react'\n\nfunction useAddLabel(store) {\n    const [labelName, setLabelName] = useState('')\n    const addLabel = () => {\n        const added = store.addLabel({ name: labelName })\n        setLabelName('')\n        return added\n    }\n    return {\n        labelName,\n        setLabelName,\n        addLabel\n    }\n}\n\nexport default useAddLabel","import React from 'react'\nimport Tag from './Tag'\n\nconst PlusTag = (props) => {\n    const onAddClick = (e) => {\n        e.stopPropagation()\n        if (props.onAdd) {\n            props.onAdd()\n        }\n    }\n    return (\n        <Tag {...props} addOn={(\n            <a className='tag is-warning' onClick={onAddClick}>Link</a>\n        )} />\n    )\n}\n\nexport default PlusTag","import React from 'react'\n\nconst Hero = ({ title, description }) => (\n    <section className=\"hero is-dark\">\n        <div className=\"hero-body\">\n            <div className=\"container\">\n                <h1 className=\"title\">\n                    {title}\n                </h1>\n                <h2 className=\"subtitle\">\n                    {description}\n                </h2>\n            </div>\n        </div>\n    </section>\n)\n\nexport default Hero","import React, { Fragment, useContext } from 'react'\nimport utils from 'utils'\nimport StoreContext from './StoreContext'\nimport List from './List'\nimport AddTopic from './addTopic/AddTopic'\nimport useAddTopic from './addTopic/useAddTopic'\nimport AddLabel from './addLabel/AddLabel'\nimport useAddLabel from './addLabel/useAddLabel'\nimport DeleteTag from './DeleteTag'\nimport Card from './Card'\nimport ItemListWrapper from './ItemListWrapper'\nimport PlusTag from './PlusTag'\nimport Hero from './Hero'\n\nexport default function TopicPage({ topic = utils.isRequired(), topics }) {\n    const store = useContext(StoreContext)\n    const otherTopics = store.topics.filter(one => one.id != topic.id)\n    const similarTopics = store.getSimilarTopics(topic)\n    const myLabels = store.getLabels(topic)\n    const rawAddTopic = useAddTopic(store)\n    const addTopicProps = {\n        ...rawAddTopic,\n        addTopic() {\n            const added = rawAddTopic.addTopic()\n            store.linkTwoTopics(added, topic)\n        }\n    }\n    const rawAddLabel = useAddLabel(store)\n    const addLabelProps = {\n        ...rawAddLabel,\n        addLabel() {\n            const added = rawAddLabel.addLabel()\n            store.labelTopic(topic, added)\n        }\n    }\n\n    const removeSimilarTopic = one => {\n        store.removeTopicLink(one, topic)\n    }\n\n    const linkTopic = (one) => {\n        store.linkTwoTopics(one, topic)\n    }\n\n\n    const linkLabel = (label) => {\n        store.labelTopic(topic, label)\n    }\n\n    const removeLabel = label => {\n        store.removeLabelFromTopic(topic, label)\n    }\n\n    return (\n        <Fragment>\n            <div style={{ 'marginBottom': '20px' }}>\n                <Hero title={topic.name} description={topic.description} />\n            </div>\n            <Card title=\"Labels\">\n                <List {...{\n                    list: myLabels,\n                    renderContent: l => <DeleteTag key={l.id} colorClass=\"is-primary\" item={l} onClick={() => { }} onDelete={() => removeLabel(l)} />,\n                }} />\n            </Card>\n            <Card title=\"Topics\">\n                <div style={{ display: 'flex' }}>\n                    <List {...{\n                        list: similarTopics,\n                        renderContent: t => <DeleteTag key={t.id} item={t} onClick={() => { }} onDelete={() => removeSimilarTopic(t)} />,\n                    }} />\n                </div>\n            </Card>\n            <AddLabel {...addLabelProps} />\n            <AddTopic {...addTopicProps} />\n            <Card title=\"Other Topics\">\n                <ItemListWrapper>\n                    {otherTopics.map(topic => {\n                        return (\n                            <PlusTag colorClass=\"is-link\" key={topic.id} item={topic} onAdd={() => linkTopic(topic)} />\n                        )\n                    })}\n                </ItemListWrapper>\n            </Card>\n            <Card title=\"All Labels\">\n                <List {...{\n                    list: store.labels,\n                    renderContent: l => <PlusTag colorClass=\"is-primary\" key={l.id} item={l} onAdd={e => linkLabel(l)} />\n                }} />\n            </Card>\n\n        </Fragment>\n    )\n}","import React from 'react'\n\nexport default function ControlTag ({colorClass = \"is-link\", text = '', onClick}) {\n    return (\n        <div className=\"control\" onClick={onClick}>\n            <a className={`tag ${colorClass}`}>{text}</a>\n        </div>\n    )\n}\n\n","import React from 'react'\nimport utils from 'utils'\nimport DeleteTag from './DeleteTag'\nimport ControlTag from './ControlTag'\n\nconst LabelItem = ({label = utils.isRequired(), onClick}) => {\n    return (\n        <ControlTag\n            onClick={onClick}\n            text={label.name}\n            colorClass=\"is-primary\"\n        /> \n    )\n}\n\nexport default LabelItem","import React, { Fragment } from 'react'\nimport Hero from './Hero'\nimport Card from './Card'\nimport ItemListWrapper from './ItemListWrapper'\nimport ControlTag from './ControlTag'\n\nexport default function LabelPage({ label, store }) {\n    const topics = store.getTopicsByLabel(label)\n    // jjtodo: for topics in this labels page, should probably use a tag without deletion \n    // feature.\n    const topicsView = topics.length > 0\n        ? (\n            <ItemListWrapper>\n                {\n                    topics.map(topic => (\n                        <ControlTag key={topic.id} text={topic.name} onClick={() => {}} />\n                    ))\n                }\n            </ItemListWrapper>\n        )\n        : ''\n    return (\n        <Fragment>\n            <Hero title={label.name} description={label.description} />\n            <Card title=\"Topics\">\n                {topicsView}\n            </Card>\n        </Fragment>\n    )\n}","import React from 'react';\n\nconst Area = (props) => (\n    <div className=\"box\"> \n        {props.children}\n    </div>\n)\n\nexport default Area","import { saveAs } from 'file-saver'\n\nconst noServer = true\n\nfunction getResource() {\n  function post(url, json) {\n    return fetch(url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(json)\n    })\n      .then(res => res.json())\n  }\n\n  const saveGraph = (graph) => {\n    if (noServer) {\n      var blob = new Blob([JSON.stringify(graph)], { type: \"text/plain;charset=utf-8\" });\n      saveAs(blob, \"graph.txt\");\n    } else {\n      return post('/graph', { graph })\n    }\n\n  }\n\n  const getGraph = (e) => {\n    if (noServer) {\n      const target = e.target\n      const files = target.files\n      if (files.length > 0) {\n        const file = e.target.files[0]\n        const reader = new FileReader()\n        reader.onload = (event) => {\n          const graph = JSON.parse(event.target.result)\n          target.value = null\n          return graph\n        }\n        reader.readAsText(file)\n      }\n    } else {\n      return fetch('/graph')\n        .then(res => res.json())\n    }\n  }\n\n  return {\n    saveGraph,\n    getGraph,\n  }\n}\n\nconst resource = getResource()\n\nexport default resource\n\n\n\n\n","import {useState}  from 'react'\n\nfunction useId () {\n    const [id, setId] = useState(0)\n    return {\n        id,\n        generate () {\n            const next = id + 1\n            setId(next)\n            return next\n        },\n        restore (lastId) {\n            setId(lastId)\n        }\n    }\n}\n\nexport default useId\n\n","import { useState } from 'react'\nimport resource from 'resource'\nimport utils from 'utils'\nimport useId from 'useId'\nconst { isRequired } = utils\n\n\nconst createTopicLink = (topic1, topic2) => {\n    return [topic1.id, topic2.id].sort() // small - big\n}\n\nconst createTopicLabelLink = (topic, label) => {\n    return [topic.id, label.id]\n}\n\nconst useStore = () => {\n    // so far we have no order\n    const idGenerator = useId()\n    const labelFuncs = {\n        // could refactor out the core if new id is not needed\n        createLabel({ name = isRequired() }) {\n            return {\n                id: idGenerator.generate(),\n                name,\n                similar: []\n            }\n        }\n    }\n    const topicFuncs = {\n        createTopic({ name = isRequired(), description = '', }) {\n            return {\n                id: idGenerator.generate(),\n                name,\n                description,\n                labels: [],\n                similar: [],\n                comments: [],\n            }\n        }\n    }\n    const [topicDict, setTopicDict] = useState({})\n    const [labelDict, setLabelDict] = useState({})\n    const [currentTopicId, setCurrentTopicId] = useState(-1)\n    const [currentLabelId, setCurrentLabelId] = useState(-1)\n    const [topicLinks, setTopicLinks] = useState([])\n    const [labelLinks, setLabelLinks] = useState([])\n    const [topicLabelLinks, setTopicLabelLinks] = useState([])\n\n    const hasTopic = currentTopicId > -1\n    const hasLabel = currentLabelId > -1\n    const currentTopic = hasTopic ? topicDict[currentTopicId] : null\n    const currentLabel = hasLabel ? labelDict[currentLabelId] : null\n\n    // derived values\n    const topics = Object.values(topicDict)\n    const labels = Object.values(labelDict)\n\n\n    const addTopic = (attrs) => {\n        const topic = topicFuncs.createTopic(attrs)\n        setTopicDict({ ...topicDict, [topic.id]: topic })\n        return topic\n    }\n\n    const addLabel = (attrs) => {\n        const label = labelFuncs.createLabel(attrs)\n        setLabelDict({ ...labelDict, [label.id]: label })\n        return label\n    }\n\n    const save = () => {\n        const graph = {\n            id: idGenerator.id,\n            topicDict,\n            labelDict,\n            topicLinks,\n            labelLinks,\n            topicLabelLinks,\n        }\n        return resource.saveGraph(graph)\n    }\n\n    const load = (graph) => {\n        idGenerator.restore(graph.id)\n        setTopicDict(graph.topicDict)\n        setLabelDict(graph.labelDict)\n        setTopicLinks(graph.topicLinks)\n        setLabelLinks(graph.labelLinks)\n        setTopicLabelLinks(graph.topicLabelLinks)\n    }\n\n    const loadFromServer = () => {\n        return resource.getGraph()\n            .then((graph) => {\n                load(graph)\n            })\n    }\n\n    const isSameLink = (l1, l2) => {\n        return l1[0] === l2[0] && l1[1] === l2[1]\n    }\n\n    const hasTopicLink = (link) => {\n        return topicLinks.some(one => isSameLink(link, one))\n    }\n\n    const linkTwoTopics = (a, b) => {\n        const link = createTopicLink(a, b)\n        if (!hasTopicLink(link)) {\n            setTopicLinks([...topicLinks, link])\n        }\n    }\n\n    // todo: might need to memoize\n    const getTopicsByLabel = (label) => {\n        const id = label.id\n        const topicIds = []\n        for (const [topicId, labelId] of topicLabelLinks) {\n            if (labelId === id) {\n                topicIds.push(topicId)\n            }\n        }\n        return topicIds.map(topicId => topicDict[topicId])\n    }\n\n    // todo: memoize if expensive\n    const getSimilarTopics = (topic) => {\n        const id = topic.id\n        const ids = []\n        for (const [id1, id2] of topicLinks) {\n            if (id1 === id) {\n                ids.push(id2)\n            }\n            if (id2 === id) {\n                ids.push(id1)\n            }\n        }\n        return ids.map(id => topicDict[id])\n    }\n\n    const getLabels = topic => {\n        const id = topic.id\n        const ids = []\n        for (const [tid, lid] of topicLabelLinks) {\n            if (id === tid) {\n                ids.push(lid)\n            }\n        }\n        return ids.map(id => labelDict[id])\n    }\n\n    const hasTopicLabelLink = (link) => {\n        return topicLabelLinks.some(l => isSameLink(l, link))\n    }\n\n    const allLabels = Object.values(labelDict)\n\n    const notEqualTo = link => l => !isSameLink(link, l)\n\n    return {\n        getTopicsByLabel,\n        removeTopicLink(t1, t2) {\n            const link = createTopicLink(t1, t2)\n            setTopicLinks(topicLinks.filter(notEqualTo(link)))\n        },\n        removeLabelFromTopic(topic, label) {\n            const link = createTopicLabelLink(topic, label)\n            setTopicLabelLinks(topicLabelLinks.filter(notEqualTo(link)))\n        },\n        labelTopic(topic, label) {\n            const link = createTopicLabelLink(topic, label)\n            if (!hasTopicLabelLink(link)) {\n                setTopicLabelLinks([...topicLabelLinks, link])\n            }\n        },\n        getLabels,\n        topics,\n        labels,\n        addTopic,\n        addLabel,\n        save,\n        load,\n        currentTopic,\n        currentLabel,\n        changeTopic(topic) {\n            setCurrentTopicId(topic.id)\n        },\n        changeLabel(label) {\n            setCurrentLabelId(label.id)\n        },\n        linkTwoTopics,\n        topicLinks,\n        getSimilarTopics,\n        updateTopic(newOne) {\n            setTopicDict({ ...topicDict, [newOne.id]: newOne })\n        },\n        removeTopic(topic) {\n            // remove from dict\n            // TODO: The problem, entries will return string\n            const newDict = Object.fromEntries(\n                Object.entries(topicDict).filter(entry => entry[0] != topic.id)\n            )\n            setTopicDict(newDict)\n\n            // remove relations\n            setTopicLinks(topicLinks.filter(([id1, id2]) => id1 !== topic.id && id2 !== topic.id))\n            setTopicLabelLinks(topicLabelLinks.filter(([id]) => id !== topic.id))\n        }\n    }\n}\n\nexport default useStore","import React from 'react'\n\nconst Page = (props) => {\n    return (\n        <div style={{margin: '20px'}}> \n            {props.children}\n        </div>\n    )\n}\n\nexport default Page","import React from 'react'\n\nconst Button = ({children, onClick}) => (\n    <button className=\"button\" onClick={onClick}>{children}</button>\n)\n\nexport default Button","import React from 'react'\n\nconst FileInput = ({onChange}) => (\n    <div className=\"file\">\n        <label className=\"file-label\">\n            <input type=\"file\" onChange={onChange} className=\"file-input\" />\n            <span className=\"file-cta\">\n                <span className=\"file-icon\">\n                    <i className=\"fas fa-upload\"></i>\n                </span>\n                <span className=\"file-label\">\n                    Choose a file...\n                </span>\n            </span>\n        </label>\n    </div>\n)\n\nexport default FileInput","import React, { useState, Fragment } from 'react';\nimport TopicItem from './TopicItem'\nimport TopicPage from './TopicPage'\nimport LabelItem from './LabelItem'\nimport LabelPage from './LabelPage'\nimport Area from './Area'\nimport StoreContext from './StoreContext'\nimport useStore from './useStore'\nimport AddTopic from './addTopic/AddTopic'\nimport useAddTopic from './addTopic/useAddTopic'\nimport useAddLabel from './addLabel/useAddLabel'\nimport AddLabel from './addLabel/AddLabel'\nimport Page from './Page'\nimport ItemListWrapper from './ItemListWrapper'\nimport Card from './Card'\nimport Button from './Button'\nimport FileInput from './FileInput'\nimport ControlTag from './ControlTag'\n\nconst DoButton = ({ text, onClick }) => {\n    return (\n        <Area>\n            <Button onClick={onClick}>{text}</Button>\n        </Area>\n    )\n}\n\nconst Save = ({ onClick }) => {\n    return <DoButton onClick={onClick} text=\"Save\" />\n}\n\nconst Workspace = () => {\n    const views = {\n        main: 'main',\n        topicPage: 'topicPage',\n        labelPage: 'labelPage'\n    }\n    const store = useStore()\n    const { topics, labels } = store\n    const [view, setView] = useState(views.main)\n\n    const toTopicPage = (topic) => {\n        store.changeTopic(topic)\n        setView(views.topicPage)\n    }\n\n    const onSave = () => store.save()\n\n    const onLoad = () => store.load()\n\n\n    const toLabelPage = (label) => {\n        store.changeLabel(label)\n        setView(views.labelPage)\n    }\n    \n\n    const onUpload = e => {\n        const target = e.target\n        const files = target.files\n        if (files.length > 0) {\n            const file = e.target.files[0]\n            const reader = new FileReader()\n            reader.onload = (event) => {\n                const graph = JSON.parse(event.target.result)\n                target.value = null\n                store.load(graph)\n            }\n            reader.readAsText(file)\n        }\n    }\n\n\n\n    const mainPage = (\n        <Fragment>\n            <Card title='Topics'>\n                {\n                    topics.length > 0\n                        ? (<ItemListWrapper>\n                                {topics.map(topic => <TopicItem key={topic.name} topic={topic} onClick={() => toTopicPage(topic)} />)}\n                           </ItemListWrapper>)\n                        : 'None'\n                }\n            </Card>\n            <Card title=\"Labels\">\n                {\n                    labels.length > 0\n                        ? (<ItemListWrapper>\n                                {labels.map(label => <LabelItem key={label.name} label={label} onClick={() => toLabelPage(label)} />)}\n                          </ItemListWrapper>)\n                        : 'None'\n                }\n            </Card>\n            <AddTopic {...useAddTopic(store)} />\n            <AddLabel {...useAddLabel(store)} />\n            <Save onClick={onSave} />\n            <Area>\n                <FileInput onChange={onUpload} />\n            </Area>\n        </Fragment>\n    )\n\n    const doSwitch = () => {\n        switch (view) {\n            case views.main: return mainPage\n            case views.topicPage: return <TopicPage topic={store.currentTopic} />\n            case views.labelPage: return <LabelPage label={store.currentLabel} store={store} />\n            default: return mainPage\n        }\n    }\n\n    return (\n        <StoreContext.Provider value={store}>\n            <Page>\n                {doSwitch()}\n                <DoButton text=\"to main page\" onClick={() => setView(views.main)} />\n            </Page>\n        </StoreContext.Provider>\n    )\n}\n\nexport default Workspace","import React, {useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Workspace from './works/Workspace'\n\nconst Test = () => {\n  const [text, setText] = useState('')\n  const [info, setInfo] = useState('')\n\n  const onClick = () => {\n    const number = Math.random()\n    setText('changed yo' + number)\n  }\n  const onChange = e => setText(e.target.value)\n  return [\n    <div style={{margin: '30px', border: '1px solid black', width: '300px'}}>\n      Testing area <br/>\n      <input value={text} onChange={onChange} /> <br/>\n      <button >send</button> <br/>\n      <button> get </button> <br/>\n      <div>content: {JSON.stringify(info)}</div>\n    </div>,\n    <div style={{border: '1px solid black', margin: '20px'}}> \n      Create a topic\n      Name: <input />\n    </div>,\n    <Workspace/>\n  ]\n}\n\nconst App = () => (\n  <div>\n    <Workspace />\n  </div>\n)\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}