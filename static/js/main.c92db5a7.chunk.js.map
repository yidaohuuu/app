{"version":3,"sources":["logo.svg","works/StoreContext.js","utils.js","works/Item.js","works/TopicItem.js","works/Area.js","works/ItemListWrapper.js","works/List.js","works/addTopic/AddTopic.js","works/addTopic/useAddTopic.js","works/addLabel/AddLabel.js","works/addLabel/useAddLabel.js","works/TopicPage.js","works/LabelItem.js","works/LabelPage.js","resource.js","useId.js","works/useStore.js","works/Page.js","works/Workspace.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","StoreContext","React","createContext","utils","isRequired","Error","stopPropagation","e","Item","_ref","_ref$onClick","onClick","_ref$item","item","_ref$onDelete","onDelete","_ref$colorClass","colorClass","react_default","a","createElement","className","concat","name","TopicItem","_ref$topic","topic","store","useContext","works_Item","removeTopic","Area","props","children","ItemListWrapper","List","list","renderContent","length","map","AddTopic","topicName","onChangeTopicName","topicDescription","setTopicDescription","addTopic","works_Area","key","value","onChange","target","useAddTopic","_useState","useState","_useState2","Object","slicedToArray","setTopicName","_useState3","_useState4","added","description","AddLabel","labelName","setLabelName","addLabel","useAddLabel","Hero","title","TopicPage","_ref2","_ref2$topic","topics","otherTopics","filter","one","id","similarTopics","getSimilarTopics","myLabels","getLabels","rawAddTopic","addTopicProps","objectSpread","linkTwoTopics","rawAddLabel","addLabelProps","labelTopic","similarTopicList","works_List","t","removeTopicLink","linkTopic","otherTopicList","react","style","margin-bottom","TopicPage_Hero","display","marginRight","l","label","removeLabelFromTopic","addLabel_AddLabel","addTopic_AddTopic","labels","LabelItem","_ref$label","noServer","resource","saveGraph","graph","json","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","res","blob","Blob","type","saveAs","getGraph","files","file","reader","FileReader","onload","event","parse","result","readAsText","useId","setId","generate","next","restore","lastId","createTopicLink","topic1","topic2","sort","createTopicLabelLink","useStore","idGenerator","labelFuncs","_ref$name","similar","topicFuncs","_ref2$name","_ref2$description","comments","topicDict","setTopicDict","labelDict","setLabelDict","_useState5","_useState6","currentTopicId","setCurrentTopicId","_useState7","_useState8","currentLabelId","setCurrentLabelId","_useState9","_useState10","topicLinks","setTopicLinks","_useState11","_useState12","labelLinks","setLabelLinks","_useState13","_useState14","topicLabelLinks","setTopicLabelLinks","hasLabel","currentTopic","currentLabel","values","load","isSameLink","l1","l2","notEqualTo","link","t1","t2","some","hasTopicLabelLink","toConsumableArray","ids","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","Symbol","iterator","done","_ref8","_ref7","tid","lid","push","err","return","attrs","defineProperty","save","changeTopic","changeLabel","b","hasTopicLink","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_ref5","_ref4","id1","id2","updateTopic","newOne","newDict","fromEntries","entries","entry","_ref9","_ref10","_ref11","Page","margin","DoButton","text","Save","Workspace_DoButton","Workspace","views","view","setView","toLabelPage","Card","_ref3","class","mainPage","works_TopicItem","toTopicPage","works_LabelItem","Workspace_Save","works_StoreContext","Provider","works_Page","LabelPage_TopicPage","doSwitch","App","works_Workspace","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c92db5a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\n\nconst StoreContext = React.createContext()\n\nexport default StoreContext\n","\nexport default {\n    isRequired () {\n        throw new Error('A required parameter is missing')\n    },\n    stopPropagation (e) {\n        e.stopPropagation()\n    }\n}","import React from 'react'\nimport utils from 'utils'\nconst {isRequired} = utils\n\nconst Item = ({onClick = isRequired(), item = isRequired(), onDelete = isRequired(), colorClass = 'is-link'}) => {\n    return (\n        <div className=\"control\"\n            onClick={onClick}\n        >\n            <div className=\"tags has-addons\">\n                <a className={`tag ${colorClass}`}>{item.name}</a>\n                <a className=\"tag is-delete\" onClick={e => onDelete(e, item)}></a>\n            </div>\n        </div>\n    )\n}\n\nexport default Item","import React, { useContext } from 'react'\nimport StoreContext from './StoreContext'\nimport utils from 'utils'\nimport Item from './Item'\nconst { isRequired } = utils\n\nconst TopicItem = ({ topic = isRequired(), onClick = isRequired() }) => {\n    const store = useContext(StoreContext)\n    const removeTopic = (e, topic) => {\n        e.stopPropagation()\n        store.removeTopic(topic)\n    }\n    return (\n        <Item {...{\n            onClick, item: topic, onDelete: removeTopic\n        }} />\n    )\n}\n\nexport default TopicItem","import React from 'react';\n\nconst Area = (props) => (\n    <div className=\"box\"> \n        {props.children}\n    </div>\n)\n\nexport default Area","import React from 'react'\n\nexport default function ItemListWrapper ({children}) {\n    return (\n        <div className=\"field is-grouped is-grouped-multiline\">\n            {children}\n        </div>\n    )\n}\n\n\n","import React from 'react'\nimport ItemListWrapper from './ItemListWrapper'\n\nconst List = ({ list, renderContent }) => {\n    return (\n        list.length > 0\n            ? (\n                <ItemListWrapper>\n                    {list.map(item => {\n                        return (renderContent(item))\n                    })}\n                </ItemListWrapper>\n            )\n            : 'None'\n    )\n}\n\nexport default List","import React from 'react'\nimport Area from '../Area'\n\nconst AddTopic = ({ topicName, onChangeTopicName, topicDescription, setTopicDescription, addTopic }) => {\n    return (\n        <Area key='2'>\n            Create a topic: <br />\n            Name: <input value={topicName} onChange={onChangeTopicName} /> <br />\n            Description: <input value={topicDescription} onChange={e => setTopicDescription(e.target.value)} /> <br />\n            <button onClick={addTopic}>Create</button>\n        </Area>\n    )\n}\n\nexport default AddTopic","import { useState, useContext } from 'react'\n\nfunction useAddTopic(store) {\n    const [topicName, setTopicName] = useState('')\n    const [topicDescription, setTopicDescription] = useState('')\n    const addTopic = () => {\n        const added = store.addTopic({ name: topicName, description: topicDescription })\n        setTopicName('')\n        setTopicDescription('')\n        return added\n    }\n    const onChangeTopicName = e => setTopicName(e.target.value)\n    return {\n        topicName,\n        topicDescription,\n        addTopic,\n        onChangeTopicName,\n        setTopicDescription,\n    }\n}\n\nexport default useAddTopic","import React from 'react'\nimport Area from '../Area'\n\nconst AddLabel = ({ labelName, setLabelName, addLabel }) => {\n    return (\n        <Area>\n            Create a label: <br />\n            Name: <input value={labelName} onChange={e => setLabelName(e.target.value)} /> <br />\n            <button onClick={addLabel}>Create</button>\n        </Area>\n    )\n}\n\nexport default AddLabel","import {useState} from 'react'\n\nfunction useAddLabel(store) {\n    const [labelName, setLabelName] = useState('')\n    const addLabel = () => {\n        const added = store.addLabel({ name: labelName })\n        setLabelName('')\n        return added\n    }\n    return {\n        labelName,\n        setLabelName,\n        addLabel\n    }\n}\n\nexport default useAddLabel","import React, { Fragment, useContext, useState } from 'react'\nimport utils from 'utils'\nimport Area from './Area'\nimport StoreContext from './StoreContext'\nimport List from './List'\nimport AddTopic from './addTopic/AddTopic'\nimport useAddTopic from './addTopic/useAddTopic'\nimport AddLabel from './addLabel/AddLabel'\nimport useAddLabel from './addLabel/useAddLabel'\nimport Item from './Item'\n\nconst Hero = ({ title, description }) => (\n    <section className=\"hero is-dark\">\n        <div className=\"hero-body\">\n            <div className=\"container\">\n                <h1 className=\"title\">\n                    {title}\n                </h1>\n                <h2 className=\"subtitle\">\n                    {description}\n                </h2>\n            </div>\n        </div>\n    </section>\n)\n\nexport default function TopicPage({ topic = utils.isRequired(), topics }) {\n    const store = useContext(StoreContext)\n    const otherTopics = store.topics.filter(one => one.id != topic.id)\n    const similarTopics = store.getSimilarTopics(topic)\n    const myLabels = store.getLabels(topic)\n    const rawAddTopic = useAddTopic(store)\n    const addTopicProps = {\n        ...rawAddTopic,\n        addTopic() {\n            const added = rawAddTopic.addTopic()\n            store.linkTwoTopics(added, topic)\n        }\n    }\n    const rawAddLabel = useAddLabel(store)\n    const addLabelProps = {\n        ...rawAddLabel,\n        addLabel() {\n            const added = rawAddLabel.addLabel()\n            store.labelTopic(topic, added)\n        }\n    }\n\n    const removeSimilarTopic = one => {\n        store.removeTopicLink(one, topic)\n    }\n\n    const similarTopicList = (\n        <List {...{\n            list: similarTopics,\n            renderContent: t => <Item item={t} onClick={() => {}} onDelete={() => removeSimilarTopic(t)} />,\n        }} />\n    )\n\n    const linkTopic = (one) => {\n        store.linkTwoTopics(one, topic)\n    }\n\n    const otherTopicList = (\n        <ul>\n            {otherTopics.map(topic => {\n                return (\n                    <Fragment key={topic.id}>\n                        <li> {topic.name} <button onClick={() => linkTopic(topic)}> link </button> </li>\n                    </Fragment>\n                )\n            })}\n        </ul>\n    )\n\n\n    const linkLabel = (label) => {\n        store.labelTopic(topic, label)\n    }\n\n    const removeLabel = label => {\n        store.removeLabelFromTopic(topic, label)\n    }\n\n    return (\n        <Fragment>\n            <div style={{ 'margin-bottom': '20px' }}>\n                <Hero title={topic.name} description={topic.description} />\n            </div>\n            <Area>\n                <div style={{display: 'flex'}}> \n                    <span style={{marginRight: '10px'}}>Labels: </span>\n                    <div> \n                        <List {...{\n                            list: myLabels,\n                            renderContent: l => <Item colorClass=\"is-primary\" item={l} onClick={() => {}} onDelete={() => removeLabel(l)} />,\n                        }} />\n                    </div>\n                </div>\n            </Area>\n            <Area>\n                <div style={{display: 'flex'}}> \n                    <span style={{marginRight: '10px'}}>Topics: </span>\n                    {similarTopicList}\n                </div>\n            </Area>\n            <AddLabel {...addLabelProps} />\n            <AddTopic {...addTopicProps} />\n            <Area>\n                Other nodes: <br />\n                {otherTopicList}\n            </Area>\n            <Area>\n                All labels: <br />\n                <List {...{\n                    list: store.labels,\n                    renderContent: l => <span> {l.name} <button onClick={e => linkLabel(l)}>Add</button> </span>\n                }} />\n            </Area>\n        </Fragment>\n    )\n}","import React from 'react'\nimport utils from 'utils'\nimport Item from './Item'\n\nconst LabelItem = ({label = utils.isRequired(), onClick}) => {\n    return (\n        <Item \n            onClick={onClick}\n            item={label}\n            onDelete={utils.stopPropagation}\n            colorClass=\"is-primary\"\n        > \n            {label.name} \n        </Item>\n    )\n}\n\nexport default LabelItem","import React from 'react'\n\nexport default function TopicPage () {\n    return 'oh label page is different'\n}","import { saveAs } from 'file-saver'\n\nconst noServer = true\n\nfunction getResource() {\n  function post(url, json) {\n    return fetch(url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(json)\n    })\n      .then(res => res.json())\n  }\n\n  const saveGraph = (graph) => {\n    if (noServer) {\n      var blob = new Blob([JSON.stringify(graph)], { type: \"text/plain;charset=utf-8\" });\n      saveAs(blob, \"graph.txt\");\n    } else {\n      return post('/graph', { graph })\n    }\n\n  }\n\n  const getGraph = (e) => {\n    if (noServer) {\n      const target = e.target\n      const files = target.files\n      if (files.length > 0) {\n        const file = e.target.files[0]\n        const reader = new FileReader()\n        reader.onload = (event) => {\n          const graph = JSON.parse(event.target.result)\n          target.value = null\n          return graph\n        }\n        reader.readAsText(file)\n      }\n    } else {\n      return fetch('/graph')\n        .then(res => res.json())\n    }\n  }\n\n  return {\n    saveGraph,\n    getGraph,\n  }\n}\n\nconst resource = getResource()\n\nexport default resource\n\n\n\n\n","import {useState}  from 'react'\n\nfunction useId () {\n    const [id, setId] = useState(0)\n    return {\n        id,\n        generate () {\n            const next = id + 1\n            setId(next)\n            return next\n        },\n        restore (lastId) {\n            setId(lastId)\n        }\n    }\n}\n\nexport default useId\n\n","import { useState } from 'react'\nimport resource from 'resource'\nimport utils from 'utils'\nimport useId from 'useId'\nconst { isRequired } = utils\n\n\nconst createTopicLink = (topic1, topic2) => {\n    return [topic1.id, topic2.id].sort() // small - big\n}\n\nconst createTopicLabelLink = (topic, label) => {\n    return [topic.id, label.id]\n}\n\nconst useStore = () => {\n    // so far we have no order\n    const idGenerator = useId()\n    const labelFuncs = {\n        // could refactor out the core if new id is not needed\n        createLabel({ name = isRequired() }) {\n            return {\n                id: idGenerator.generate(),\n                name,\n                similar: []\n            }\n        }\n    }\n    const topicFuncs = {\n        createTopic({ name = isRequired(), description = '', }) {\n            return {\n                id: idGenerator.generate(),\n                name,\n                description,\n                labels: [],\n                similar: [],\n                comments: [],\n            }\n        }\n    }\n    const [topicDict, setTopicDict] = useState({})\n    const [labelDict, setLabelDict] = useState({})\n    const [currentTopicId, setCurrentTopicId] = useState(-1)\n    const [currentLabelId, setCurrentLabelId] = useState(-1)\n    const [topicLinks, setTopicLinks] = useState([])\n    const [labelLinks, setLabelLinks] = useState([])\n    const [topicLabelLinks, setTopicLabelLinks] = useState([])\n\n    const hasTopic = currentTopicId > -1\n    const hasLabel = currentLabelId > -1\n    const currentTopic = hasTopic ? topicDict[currentTopicId] : null\n    const currentLabel = hasLabel ? labelDict[currentLabelId] : null\n\n    // derived values\n    const topics = Object.values(topicDict)\n    const labels = Object.values(labelDict)\n\n    const addTopic = (attrs) => {\n        const topic = topicFuncs.createTopic(attrs)\n        setTopicDict({ ...topicDict, [topic.id]: topic })\n        return topic\n    }\n\n    const addLabel = (attrs) => {\n        const label = labelFuncs.createLabel(attrs)\n        setLabelDict({ ...labelDict, [label.id]: label })\n        return label\n    }\n\n    const save = () => {\n        const graph = {\n            id: idGenerator.id,\n            topicDict,\n            labelDict,\n            topicLinks,\n            labelLinks,\n            topicLabelLinks,\n        }\n        return resource.saveGraph(graph)\n    }\n\n    const load = (graph) => {\n        idGenerator.restore(graph.id)\n        setTopicDict(graph.topicDict)\n        setLabelDict(graph.labelDict)\n        setTopicLinks(graph.topicLinks)\n        setLabelLinks(graph.labelLinks)\n        setTopicLabelLinks(graph.topicLabelLinks)\n    }\n\n    const loadFromServer = () => {\n        return resource.getGraph()\n            .then((graph) => {\n                load(graph)\n            })\n    }\n\n    const isSameLink = (l1, l2) => {\n        return l1[0] === l2[0] && l1[1] === l2[1]\n    }\n\n    const hasTopicLink = (link) => {\n        return topicLinks.some(one => isSameLink(link, one))\n    }\n\n    const linkTwoTopics = (a, b) => {\n        const link = createTopicLink(a, b)\n        if (!hasTopicLink(link)) {\n            setTopicLinks([...topicLinks, link])\n        }\n    }\n\n    // todo: memoize if expensive\n    const getSimilarTopics = (topic) => {\n        const id = topic.id\n        const ids = []\n        for (const [id1, id2] of topicLinks) {\n            if (id1 === id) {\n                ids.push(id2)\n            }\n            if (id2 === id) {\n                ids.push(id1)\n            }\n        }\n        return ids.map(id => topicDict[id])\n    }\n\n    const getLabels = topic => {\n        const id = topic.id\n        const ids = []\n        for (const [tid, lid] of topicLabelLinks) {\n            if (id === tid) {\n                ids.push(lid)\n            }\n        }\n        return ids.map(id => labelDict[id])\n    }\n\n    const hasTopicLabelLink = (link) => {\n        return topicLabelLinks.some(l => isSameLink(l, link))\n    }\n\n    const allLabels = Object.values(labelDict)\n\n    const notEqualTo = link => l => !isSameLink(link, l)\n\n    return {\n        removeTopicLink(t1, t2) {\n            const link = createTopicLink(t1, t2)\n            setTopicLinks(topicLinks.filter(notEqualTo(link)))\n        },\n        removeLabelFromTopic(topic, label) {\n            const link = createTopicLabelLink(topic, label)\n            setTopicLabelLinks(topicLabelLinks.filter(notEqualTo(link)))\n        },\n        labelTopic(topic, label) {\n            const link = createTopicLabelLink(topic, label)\n            if (!hasTopicLabelLink(link)) {\n                setTopicLabelLinks([...topicLabelLinks, link])\n            }\n        },\n        getLabels,\n        topics,\n        labels,\n        addTopic,\n        addLabel,\n        save,\n        load,\n        currentTopic,\n        currentLabel,\n        changeTopic(topic) {\n            setCurrentTopicId(topic.id)\n        },\n        changeLabel(label) {\n            setCurrentLabelId(label.id)\n        },\n        linkTwoTopics,\n        topicLinks,\n        getSimilarTopics,\n        updateTopic(newOne) {\n            setTopicDict({ ...topicDict, [newOne.id]: newOne })\n        },\n        removeTopic(topic) {\n            // remove from dict\n            // TODO: The problem, entries will return string\n            const newDict = Object.fromEntries(\n                Object.entries(topicDict).filter(entry => entry[0] != topic.id)\n            )\n            setTopicDict(newDict)\n\n            // remove relations\n            setTopicLinks(topicLinks.filter(([id1, id2]) => id1 !== topic.id && id2 !== topic.id))\n            setTopicLabelLinks(topicLabelLinks.filter(([id]) => id !== topic.id))\n        }\n    }\n}\n\nexport default useStore","import React from 'react'\n\nconst Page = (props) => {\n    return (\n        <div style={{margin: '20px'}}> \n            {props.children}\n        </div>\n    )\n}\n\nexport default Page","import React, { useState, Fragment } from 'react';\nimport TopicItem from './TopicItem'\nimport TopicPage from './TopicPage'\nimport LabelItem from './LabelItem'\nimport LabelPage from './LabelPage'\nimport Area from './Area'\nimport StoreContext from './StoreContext'\nimport useStore from './useStore'\nimport AddTopic from './addTopic/AddTopic'\nimport useAddTopic from './addTopic/useAddTopic'\nimport useAddLabel from './addLabel/useAddLabel'\nimport AddLabel from './addLabel/AddLabel'\nimport Page from './Page'\nimport ItemListWrapper from './ItemListWrapper'\n\nconst DoButton = ({ text, onClick }) => {\n    return (\n        <Area>\n            <button onClick={onClick}>{text}</button>\n        </Area>\n    )\n}\n\nconst Save = ({ onClick }) => {\n    return <DoButton onClick={onClick} text=\"Save\" />\n}\n\nconst Workspace = () => {\n    const views = {\n        main: 'main',\n        topicPage: 'topicPage',\n        labelPage: 'labelPage'\n    }\n    const store = useStore()\n    const { topics, labels } = store\n    const [view, setView] = useState(views.main)\n\n    const toTopicPage = (topic) => {\n        store.changeTopic(topic)\n        setView(views.topicPage)\n    }\n\n    const onSave = () => store.save()\n\n    const onLoad = () => store.load()\n\n\n    const toLabelPage = () => setView(views.labelPage)\n\n    const onUpload = e => {\n        const target = e.target\n        const files = target.files\n        if (files.length > 0) {\n            const file = e.target.files[0]\n            const reader = new FileReader()\n            reader.onload = (event) => {\n                const graph = JSON.parse(event.target.result)\n                target.value = null\n                store.load(graph)\n            }\n            reader.readAsText(file)\n        }\n    }\n\n\n    const Card = ({ title, children }) => (\n        <div className=\"card\">\n            <header className=\"card-header\">\n                <p className=\"card-header-title\">{title}</p>\n            </header>\n            <div className=\"card-content\">\n                <div class=\"content\">\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n\n    const mainPage = (\n        <Fragment>\n            <Card title='Topics'>\n                {\n                    topics.length > 0\n                        ? (<ItemListWrapper>\n                                {topics.map(topic => <TopicItem key={topic.name} topic={topic} onClick={() => toTopicPage(topic)} />)}\n                           </ItemListWrapper>)\n                        : 'None'\n                }\n            </Card>\n            <Card title=\"Labels\">\n                {\n                    labels.length > 0\n                        ? (<ItemListWrapper>\n                                {labels.map(label => <LabelItem key={label.name} label={label} onClick={toLabelPage} />)}\n                          </ItemListWrapper>)\n                        : 'None'\n                }\n            </Card>\n            <AddTopic {...useAddTopic(store)} />\n            <AddLabel {...useAddLabel(store)} />\n            <Save onClick={onSave} />\n            <Area>\n                Load from file: <input type=\"file\" onChange={onUpload} />\n            </Area>\n        </Fragment>\n    )\n\n    const doSwitch = () => {\n        switch (view) {\n            case views.main: return mainPage\n            case views.topicPage: return <TopicPage topic={store.currentTopic} />\n            case views.labelPage: return <LabelPage />\n            default: return mainPage\n        }\n    }\n\n    return (\n        <StoreContext.Provider value={store}>\n            <Page>\n                {doSwitch()}\n                <DoButton text=\"to main page\" onClick={() => setView(views.main)} />\n            </Page>\n        </StoreContext.Provider>\n    )\n}\n\nexport default Workspace","import React, {useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Workspace from './works/Workspace'\n\nconst Test = () => {\n  const [text, setText] = useState('')\n  const [info, setInfo] = useState('')\n\n  const onClick = () => {\n    const number = Math.random()\n    setText('changed yo' + number)\n  }\n  const onChange = e => setText(e.target.value)\n  return [\n    <div style={{margin: '30px', border: '1px solid black', width: '300px'}}>\n      Testing area <br/>\n      <input value={text} onChange={onChange} /> <br/>\n      <button >send</button> <br/>\n      <button> get </button> <br/>\n      <div>content: {JSON.stringify(info)}</div>\n    </div>,\n    <div style={{border: '1px solid black', margin: '20px'}}> \n      Create a topic\n      Name: <input />\n    </div>,\n    <Workspace/>\n  ]\n}\n\nconst App = () => (\n  <div>\n    <Workspace />\n  </div>\n)\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}